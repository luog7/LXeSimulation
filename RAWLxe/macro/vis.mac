#/control/verbose 2
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0

# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
# Draw geometry:
/vis/drawVolume
#

# Set Up Vector
/vis/viewer/set/upVector 0 0 1

#/vis/viewer/set/viewpointThetaPhi 300. 90.
/vis/viewer/set/viewpointVector 1 1 1

# Specify style (surface or wireframe):
/vis/viewer/set/style surface
/vis/geometry/set/colour all 0 1 1 1 0.2
/vis/geometry/set/colour Lead_log 0 0 0 1 0.6
/vis/geometry/set/colour HDPE_log 0 1 1 0 0.6
/vis/geometry/set/colour Copper_log 0 1 0 0 0.6
/vis/geometry/set/colour ssteel_log 0 0 1 0 0.6
/vis/geometry/set/colour Lxe_log 1 0 0 0 0.6
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 500 mm
/tracking/storeTrajectory 1
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
#
# Set visualization to accumulate events into one picture
#
/vis/scene/endOfEventAction accumulate
